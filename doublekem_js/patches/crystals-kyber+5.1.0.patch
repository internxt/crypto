diff --git a/node_modules/crystals-kyber/kyber512.js b/node_modules/crystals-kyber/kyber512.js
index 3ec8c55..880fc67 100644
--- a/node_modules/crystals-kyber/kyber512.js
+++ b/node_modules/crystals-kyber/kyber512.js
@@ -38,8 +38,12 @@ const paramsETA2 = 2;
 
 // 1. KeyGen
 KeyGen512 = function() {
+    // random bytes for seed
+    let seed = new Uint8Array(32);
+    webcrypto.getRandomValues(seed); // web api cryptographically strong random values
+   
     // IND-CPA keypair
-    let indcpakeys = indcpaKeyGen();
+    let indcpakeys = IndcpaKeyGen(seed);
 
     let pk = indcpakeys[0];
     let sk = indcpakeys[1];
@@ -102,7 +106,7 @@ Encrypt512 = function(pk){
     let kr2 = kr.slice(32, 64);
 
     // generate ciphertext c
-    let c = indcpaEncrypt(pk, mh, kr2);
+    let c = IndcpaEncrypt(pk, mh, kr2);
 
     // hash ciphertext with SHA3-256
     const buffer5 = Buffer.from(c);
@@ -135,7 +139,7 @@ Decrypt512 = function(c, privateKey) {
     let z = privateKey.slice(1600, 1632);
 
     // IND-CPA decrypt
-    let m = indcpaDecrypt(c, sk);
+    let m = IndcpaDecrypt(c, sk);
 
     // hash m and pkh with SHA3-512
     const buffer1 = Buffer.from(m);
@@ -147,7 +151,7 @@ Decrypt512 = function(c, privateKey) {
     let kr2 = kr.slice(32, 64);
 
     // IND-CPA encrypt
-    let cmp = indcpaEncrypt(pk, m, kr2);
+    let cmp = IndcpaEncrypt(pk, m, kr2);
 
     // compare c and cmp
     let fail = ArrayCompare(c, cmp) - 1;
@@ -180,11 +184,7 @@ Decrypt512 = function(c, privateKey) {
 /*****************************************************************************************************************************/
 // indcpaKeyGen generates public and private keys for the CPA-secure
 // public-key encryption scheme underlying Kyber.
-function indcpaKeyGen() {
-
-    // random bytes for seed
-    let rnd = new Uint8Array(32);
-    webcrypto.getRandomValues(rnd); // web api cryptographically strong random values
+IndcpaKeyGen = function indcpaKeyGen(rnd) {
 
     // hash rnd with SHA3-512
     const buffer1 = Buffer.from(rnd);
@@ -283,7 +283,7 @@ function indcpaKeyGen() {
 
 // indcpaEncrypt is the encryption function of the CPA-secure
 // public-key encryption scheme underlying Kyber.
-function indcpaEncrypt(pk1, msg, coins) {
+IndcpaEncrypt = function indcpaEncrypt(pk1, msg, coins) {
 
     // DECODE PUBLIC KEY
     let pk = new Array(paramsK);
@@ -380,7 +380,7 @@ function indcpaEncrypt(pk1, msg, coins) {
 
 // indcpaDecrypt is the decryption function of the CPA-secure
 // public-key encryption scheme underlying Kyber.
-function indcpaDecrypt(c, privateKey) {
+IndcpaDecrypt = function indcpaDecrypt(c, privateKey) {
 
     // extract ciphertext
     let u = decompress1(c.slice(0, 640));
@@ -1134,4 +1134,7 @@ Test512 = function(){
 exports.KeyGen512 = KeyGen512;
 exports.Encrypt512 = Encrypt512;
 exports.Decrypt512 = Decrypt512;
+exports.IndcpaKeyGen = IndcpaKeyGen;
+exports.IndcpaEncrypt = IndcpaEncrypt;
+exports.IndcpaDecrypt = IndcpaDecrypt;
 exports.Test512 = Test512;
